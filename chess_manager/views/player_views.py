from typing import List, Tuple
from chess_manager.models.player import Player


def prompt_new_player() -> Tuple[str, str, str, str]:
    """
    Affiche le formulaire de saisie pour ajouter un nouveau joueur.

    Retour :
        Tuple contenant le nom, pr√©nom, date de naissance et identifiant national du joueur.
    """
    print("\n + Ajout d'un nouveau joueur : ")
    last_name = input("Nom de famille : ")
    first_name = input("Pr√©nom : ")
    birthdate = input("Date de naissance (format : YYYY-MM-DD) : ")
    national_id = input("Identifiant national d‚Äô√©checs (format : AB12345) : ")
    return last_name, first_name, birthdate, national_id


def confirm_player_added():
    """
    Affiche un message de confirmation apr√®s l'ajout d‚Äôun joueur.
    """
    print("‚úÖ Le joueur a bien √©t√© ajout√© √† la base de donn√©es.\n")


def display_error_message(reason: str):
    """
    Affiche un message d'erreur avec une raison explicite.

    Param√®tre :
        reason (str) : Message d√©crivant la cause de l‚Äô√©chec (ex : format invalide, ID existant).
    """
    print(f"‚ùå Erreur : {reason}")


def display_all_players(players: List[Player]):
    """
    Affiche la liste des joueurs enregistr√©s avec leurs informations principales.

    Param√®tre :
        players (List[Player]) : Liste d'objets Player √† afficher.
    """
    if not players:
        print("Aucun joueur enregistr√©.")
        return

    print("\nüìã Liste des joueurs enregistr√©s :\n")
    for idx, player in enumerate(players, 1):
        print(f"{idx}. {player.last_name.upper()}, {player.first_name} (ID: {player.national_id})")
        print(f"   N√©(e) le : {player.birthdate} ‚Äî √Çge : {player.age}")
        print(f"   Date d'inscription : {player.date_enrolled}\n")


def prompt_player_national_id(prompt="Entrez l'identifiant national d'√©checs du joueur : ") -> str:
    """
    Invite l'utilisateur √† saisir un identifiant national.

    Param√®tre :
        prompt_text (str) : Texte affich√© pour la saisie.
    Retour :
        str : L'identifiant entr√©.
    """
    return input(prompt).strip().upper()


def prompt_match_result() -> Tuple[str, str]:
    """
    √Ä terme, ce formulaire sera remplac√© par une s√©lection de match
    (sugg√©r√©e automatiquement par le syst√®me via la ronde en cours).

    Retour :
        Tuple contenant le nom du match et le r√©sultat abr√©g√© (V, D, N).
    """
    try:
        match_name = input("Nom du match (ex: 'Ronde 1') : ")
        result = input("R√©sultat (V = victoire, D = d√©faite, N = nul) : ")
        return match_name, result
    except (EOFError, KeyboardInterrupt):
        # EOFError : saisie interrompue via redirection ou fin de fichier
        # KeyboardInterrupt : interruption clavier (ex: Ctrl+C)
        print("\n‚õî Entr√©e interrompue.")
        return "", ""


def prompt_player_name_filter():
    """
    Invite √† saisir un nom ou une cha√Æne de caract√®res pour filtrer les joueurs.
    """
    return input("Entrez une cha√Æne pour trouver un joueur par nom de famille : ")


def display_player_stats(stats: str):
    """
    Affiche un r√©sum√© statistique format√© d‚Äôun joueur.

    Param√®tre :
        stats (str) : Cha√Æne format√©e g√©n√©r√©e par get_stats_summary().
    """
    print(f"\nüìä STATISTIQUES D'UN JOUEUR :\n{stats}")


def show_player_main_menu() -> str:
    """
    Affiche le menu principal de la gestion des joueurs et attend le choix de l'utilisateur.

    Gestion des erreurs :
        Intercepte EOFError ou KeyboardInterrupt pour retourner √† un √©tat s√ªr.
    """
    try:
        print("\n---- MENU DES JOUEURS ----")
        print("1. VOIR TOUS LES JOUEURS INSCRITS")
        print("2. FILTRER / TRIER LES JOUEURS INSCRITS")
        print("3. VOIR LE MENU D'UN JOUEUR INSCRIT")
        print("4. AJOUTER UN JOUEUR INSCRIT")
        print("5. RETOUR AU MENU PRINCIPAL")
        return input("Votre choix : ")
    except (EOFError, KeyboardInterrupt):
        print("\n‚õî Entr√©e interrompue. Retour au menu principal.")
        return "7"

def show_player_sort_filter_menu() -> str:
    """
    Affiche le menu pour trier ou filtrer les joueurs selon divers crit√®res.

    Retour :
        str : Choix de l‚Äôutilisateur.
    """
    try:
        print("\n-- MENU DE FILTRAGE OU TRI DES JOUEURS  --")
        print("1. TRIER LES JOUEURS PAR NOM DE FAMILLE (A-Z)")
        print("2. TRIER LES JOUEURS PAR NOM DE FAMILLE (Z-A)")
        print("3. TRIER LES JOUEURS PAR CLASSEMENT")
        print("4. TROUVER UN JOUEUR PAR IDENTIFIANT NATIONAL D'√âCHECS")
        print("5. TROUVER UN JOUEUR PAR NOM DE FAMILLE")
        print("6. VOIR LE MENU D'UN JOUEUR INSCRIT (Fiche Joueur)")
        print("7. RETOUR AU MENU DES JOUEURS")
        print("8. QUITTER LE PROGRAMME")
        return input("Votre choix : ")
    except (EOFError, KeyboardInterrupt):
        print("\n‚õî Entr√©e interrompue. Retour au menu principal.")
        return "8"


def display_player_identity(player: Player):
    """
    Affiche l‚Äôidentit√© d‚Äôun joueur s√©lectionn√©.

    Param√®tre :
        player (Player) : Objet repr√©sentant le joueur.
    """
    print(f"\nüßæ JOUEUR S√âLECTIONN√â : {player.first_name} {player.last_name} (ID: {player.national_id})")

    try:
        stats = player.get_stats_summary(None)
        print("\nüìä Statistiques actuelles :")
        for key, value in stats.items():
            print(f"   - {key} : {value}")
    except Exception as e:
        print(f"‚ùå Erreur lors de la r√©cup√©ration des statistiques : {e}")


def display_player_action_menu(player: Player) -> str:
    """
    Affiche les actions possibles sur un joueur (fiche individuelle).

    Param√®tre :
        player (Player) : Le joueur actuellement s√©lectionn√©.

    Retour :
        str : Choix de l‚Äôutilisateur.
    """
    try:
        print(f"\n---- FICHE JOUEUR : {player.first_name} {player.last_name} (ID: {player.national_id}) ----")
        print("1. MODIFIER LES INFO D'UN JOUEUR")
        print("2. CONSULTER LES STATISTIQUES D'UN JOUEUR")
        print("3. INSCRIRE √Ä UN TOURNOI ( *** bient√¥t disponible ***)")
        print("4. RETOUR AU MENU DES JOUEURS")
        print("5. RETOUR AU MENU PRINCIPAL")
        return input("Votre choix : ").strip()
    except (EOFError, KeyboardInterrupt):
        print("\n‚õî Entr√©e interrompue.")
        return "5"
